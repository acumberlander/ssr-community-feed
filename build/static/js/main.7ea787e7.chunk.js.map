{"version":3,"sources":["components/Header/Header.js","components/Owner/Owner.js","components/Card/Card.js","containers/Feed.js","containers/Question.js","containers/App.js","serviceWorker.js","index.js"],"names":["HeaderWrapper","styled","div","Title","h1","Header","OwnerWrapper","Avatar","img","Name","h3","Owner","data","src","profile_image","display_name","CardWrapper","h2","Meta","Count","Card","title","view_count","answer_count","owner","FeedWrapper","Alert","CardLink","Link","PaginationBar","PaginationLink","Feed","props","query","queryString","parse","location","search","state","page","parseInt","loading","error","this","fetchAPI","prevProps","setState","fetch","toString","json","dataJSON","message","match","items","map","item","key","question_id","to","url","Component","QuestionWrapper","Question","params","id","GlobalStyle","createGlobalStyle","AppWrapper","App","exact","path","component","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","hydrate","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7ea787e7.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst HeaderWrapper = styled.div`\n  background-color: orange;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n\nconst Title = styled.h1`\n  pointer-events: none;\n`;\n\nconst Header = () => (\n  <HeaderWrapper>\n    <Title>Q&A Feed</Title>\n  </HeaderWrapper>\n);\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst OwnerWrapper = styled.div`\n  display: flex;\n  flex-basis: 40%;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nconst Avatar = styled.img`\n  display: block;\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n`;\n\nconst Name = styled.h3`\n  margin-left: 5%;\n`;\n\nconst Owner = ({ data }) => (\n  <OwnerWrapper>\n    <Avatar src={data.profile_image} />\n    <Name>{data.display_name}</Name>\n  </OwnerWrapper>\n);\n\nexport default Owner;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Owner from '../Owner/Owner';\n\nconst CardWrapper = styled.div`\n  text-align: left;\n  padding: 1%;\n  background: lightGray;\n  border-radius: 5px;\n  margin-bottom: 2%;\n`;\n\nconst Title = styled.h2`\n  width: 100%;\n  padding-bottom: 10px;\n  text-align: center;\n  border-bottom: 1px solid darkGray;\n`;\n\nconst Meta = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 0 2%;\n`;\n\nconst Count = styled.div`\n  flex-basis: 80%;\n`;\n\nconst Card = ({ data }) => (\n  <CardWrapper>\n    <Title>{data.title}</Title>\n    <Meta>\n      <Count>\n        {`Views: ${data.view_count} | Answers: ${data.answer_count}`}\n      </Count>\n      <Owner data={data.owner} />\n    </Meta>\n  </CardWrapper>\n);\n\nexport default Card;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport queryString from 'query-string';\nimport { Link } from 'react-router-dom';\nimport Card from '../components/Card/Card';\n\nconst FeedWrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tflex-direction: column;\n\tmargin: 5%;\n`;\n\nconst Alert = styled.div`\n\ttext-align: center;\n`;\n\nconst CardLink = styled(Link)`\n\ttext-decoration: none;\n\tcolor: inherit;\n`;\n\nconst PaginationBar = styled.div`\n\twidth: 100%;\n\theight: 300px;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tbackground-color: red;\n`;\n\nconst PaginationLink = styled(Link)`\n\tpadding: 1%;\n\tbackgorund: lightBlue;\n\tcolor: white;\n\ttext-decoration: none;\n\tborder-radius: 5px;\n`;\n\nconst ROOT_API = 'https://api.stackexchange.com/2.2/';\n\nclass Feed extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tconst query = queryString.parse(props.location.search);\n\t\tthis.state = {\n\t\t\tdata: [],\n\t\t\tpage: query.page ? parseInt(query.page) : 1,\n\t\t\tloading: true,\n\t\t\terror: '',\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tconst { page } = this.state;\n\t\tthis.fetchAPI(page);\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.location.search !== this.props.location.search) {\n\t\t\tconst query = queryString.parse(this.props.location.search);\n\t\t\tthis.setState({ page: parseInt(query.page) }, () =>\n\t\t\t\tthis.fetchAPI(this.state.page)\n\t\t\t);\n\t\t}\n\t}\n\n\tasync fetchAPI(page) {\n\t\ttry {\n\t\t\tconst data = await fetch(\n\t\t\t\t`${ROOT_API}questions?order=desc&sort=activity&tagged=reactjs&site=stackoverflow${\n\t\t\t\t\tpage ? '&page=' + page.toString() : ''\n\t\t\t\t}`\n\t\t\t);\n\t\t\tconst dataJSON = await data.json();\n\n\t\t\tif (dataJSON) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tdata: dataJSON,\n\t\t\t\t\tloading: false,\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.setState({\n\t\t\t\tloading: false,\n\t\t\t\terror: error.message,\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { data, loading, error, page } = this.state;\n\t\tconst { match } = this.props;\n\n\t\tif (loading || error) {\n\t\t\treturn <Alert>{loading ? 'Loading...' : error}</Alert>;\n\t\t}\n\n\t\treturn (\n\t\t\t<FeedWrapper>\n\t\t\t\t{data.items.map((item) => (\n\t\t\t\t\t<CardLink\n\t\t\t\t\t\tkey={item.question_id}\n\t\t\t\t\t\tto={`/questions/${item.question_id}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Card data={item} />\n\t\t\t\t\t</CardLink>\n\t\t\t\t))}\n\t\t\t\t<PaginationBar>\n\t\t\t\t\t{page > 1 && (\n\t\t\t\t\t\t<PaginationLink to={match.url + '?page=' + (page - 1).toString()}>\n\t\t\t\t\t\t\tPrevious\n\t\t\t\t\t\t</PaginationLink>\n\t\t\t\t\t)}\n\t\t\t\t\t{page > 1 && (\n\t\t\t\t\t\t<PaginationLink to={match.url + '?page=' + (page + 1).toString()}>\n\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t</PaginationLink>\n\t\t\t\t\t)}\n\t\t\t\t</PaginationBar>\n\t\t\t</FeedWrapper>\n\t\t);\n\t}\n}\n\nexport default Feed;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Card from '../components/Card/Card';\n\nconst QuestionWrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tflex-direction: column;\n\tmargin: 5%;\n`;\n\nconst Alert = styled.div`\n\ttext-align: center;\n`;\n\nconst ROOT_API = 'https://api.stackexchange.com/2.2/';\n\nclass Question extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tdata: [],\n\t\t\tloading: true,\n\t\t\terror: '',\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tconst { match } = this.props;\n\t\ttry {\n\t\t\tconst data = await fetch(\n\t\t\t\t`${ROOT_API}questions/${match.params.id}?site=stackoverflow`\n\t\t\t);\n\t\t\tconst dataJSON = await data.json();\n\n\t\t\tif (dataJSON) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tdata: dataJSON,\n\t\t\t\t\tloading: false,\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.setState({\n\t\t\t\tloading: true,\n\t\t\t\terror: error.message,\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { data, loading, error } = this.state;\n\n\t\tif (loading || error) {\n\t\t\treturn <Alert>{loading ? 'Loading...' : error}</Alert>;\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<QuestionWrapper>\n\t\t\t\t\t<Card key={data.items[0].question_id} data={data.items[0]} />\n\t\t\t\t</QuestionWrapper>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Question;\n","import React, { Component } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from '../components/Header/Header';\nimport Feed from './Feed';\nimport Question from './Question';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;\n\nconst AppWrapper = styled.div`\n\ttext-align: center;\n`;\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<GlobalStyle />\n\t\t\t\t<AppWrapper>\n\t\t\t\t\t<Header />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\" component={Feed} />\n\t\t\t\t\t\t<Route path=\"/questions/:id\" component={Question} />\n\t\t\t\t\t\t<Route path=\"/questions\" component={Feed} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</AppWrapper>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.hydrate(\n\t<Router>\n\t\t<App />\n\t</Router>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}